/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import userinterface.ManagerRole.*;
import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.MarketCoEnterprise;
import Business.Network.Network;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import Business.foods.Food;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class ManageFoodOrderJPanel extends javax.swing.JPanel {

    private UserAccount userAccount;
    private MarketCoEnterprise marketEnterprise;
    private EcoSystem ecoSystem;
    private JPanel userProcessContainer;
    
    /**
     * Creates new form ManageOrganizationJPanel
     */
    public ManageFoodOrderJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.marketEnterprise = (MarketCoEnterprise) enterprise;
        this.ecoSystem = ecoSystem;
        
        populateTable();
    }

    private void populateTable(){
        DefaultTableModel model = (DefaultTableModel) productJTable.getModel();
        
        model.setRowCount(0);
        
        for (Food food: marketEnterprise.getFoodlist()){
            Object[] row = new Object[3];
            row[0] = food;
            row[1] = food.getPrice();
            row[2] = food.getStock();
            
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        selectBtn = new javax.swing.JButton();
        orderBtn = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        orderJTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        productJTable = new javax.swing.JTable();
        totalTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel3.setText("Product List");

        jLabel4.setText("Product");

        selectBtn.setText("Select");
        selectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectBtnActionPerformed(evt);
            }
        });

        orderBtn.setText("Order");
        orderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderBtnActionPerformed(evt);
            }
        });

        orderJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Num", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(orderJTable);

        jLabel6.setText("Order");

        productJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Price", "Stock"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(productJTable);

        jLabel1.setText("Total:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(jLabel4)
                        .addGap(179, 179, 179)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backJButton)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(selectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(orderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(65, 65, 65)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(totalTextField))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(202, 202, 202)
                        .addComponent(jLabel3)))
                .addContainerGap(113, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(9, 9, 9)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectBtn)
                    .addComponent(totalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(orderBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(backJButton)
                .addGap(33, 33, 33))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void selectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectBtnActionPerformed

        int selectedProd = productJTable.getSelectedRow();
        if (selectedProd < 0){
            JOptionPane.showMessageDialog(null, "Please select a product from table", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else {
            Food food = (Food)productJTable.getValueAt(selectedProd, 0);

            //restaurant table
            DefaultTableModel dtmOrder = (DefaultTableModel)orderJTable.getModel();
            for(int i = 0; i < dtmOrder.getRowCount(); i++){
                if (dtmOrder.getValueAt(i, 0).equals(food)) {
                    int num = Integer.parseInt(dtmOrder.getValueAt(i, 1).toString());
                    int price = Integer.parseInt(dtmOrder.getValueAt(i, 2).toString());
                    if (food.getStock() > num) {
                        num++;
                        dtmOrder.setValueAt(num, i, 1);
                        dtmOrder.setValueAt(num*food.getPrice(), i, 2);

                        //
                        updateTotalTextField();
                        return;
                    }
                    else {
                        JOptionPane.showMessageDialog(null, "Product stock is not enough", "Warning", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                }
            }
            //add order
            Object[] row = new Object[dtmOrder.getColumnCount()];
            row[0]=food;
            row[1]=1;
            row[2]=food.getPrice();
            
            dtmOrder.addRow(row);
            
            //
            updateTotalTextField();
        }
    }//GEN-LAST:event_selectBtnActionPerformed
    private void updateTotalTextField() {
        int total = 0;
        DefaultTableModel dtmOrder = (DefaultTableModel)orderJTable.getModel();
        for(int i = 0; i < dtmOrder.getRowCount(); i++){
            int price = Integer.parseInt(dtmOrder.getValueAt(i, 2).toString());
            total += price;
        }
        
        totalTextField.setText(Integer.toString(total));
    }
    
    private void orderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderBtnActionPerformed

        String message = userAccount.getUsername();

        DefaultTableModel dtmOrder = (DefaultTableModel)orderJTable.getModel();
        if (dtmOrder.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Please order", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        for(int i = 0; i < dtmOrder.getRowCount(); i++){
            message += " " + dtmOrder.getValueAt(i, 0).toString() + "*" +dtmOrder.getValueAt(i, 1).toString();
        }
        UserAccount receiveAccount = marketEnterprise.getManagerUserAccount();
        WorkRequest orderRequest = new WorkRequest();
        orderRequest.setMessage(message);
        orderRequest.setReceiver(receiveAccount);
        orderRequest.setSender(userAccount);
        orderRequest.setStatus("waiting");
        orderRequest.setRequestDate(new Date());

        receiveAccount.getWorkQueue().getWorkRequestList().add(orderRequest);
        userAccount.getWorkQueue().getWorkRequestList().add(orderRequest);
        JOptionPane.showMessageDialog(null, "Product ordered!");
        DB4OUtil.getInstance().storeSystem(ecoSystem);
        populateTable();
    }//GEN-LAST:event_orderBtnActionPerformed
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JButton orderBtn;
    private javax.swing.JTable orderJTable;
    private javax.swing.JTable productJTable;
    private javax.swing.JButton selectBtn;
    private javax.swing.JTextField totalTextField;
    // End of variables declaration//GEN-END:variables
}
