package userinterface.FitnessCoachRole;

import Business.Coachclass.CoachClass;
import Business.Coachclass.CoachClassdirectory;
import Business.EcoSystem;
import userinterface.ManagerRole.*;
import userinterface.FitnessCoachRole.UpdateclassJPanel;
import Business.Enterprise.Enterprise;
import Business.Organization.FitnessCoachOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class CoachWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private FitnessCoachOrganization labOrganization;

    /**
     * Creates new form AdminWorkAreaJPanel
     */
    public CoachWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.enterprise = enterprise;
        this.labOrganization = (FitnessCoachOrganization) organization;
       
        jLabel2.setText("Coach " + userAccount.getUsername() + ", welcome! ");

        populateTable();

    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

        model.setRowCount(0);

        for (CoachClass coachclass : userAccount.getClasslist()) {
            Object[] row = new Object[4];
            row[0] = coachclass;
            row[1] = coachclass.getCapacity();
            row[2] = coachclass.getPerticipants();
            row[3] = coachclass.getTime();

//        for (WorkRequest request : labOrganization.getWorkQueue().getWorkRequestList()) {
//            Object[] row = new Object[4];
//            row[0] = request;
//            row[1] = request.getSend...er().getEmployee().getName();
//            row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
//            row[3] = request.getStatus();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        manageEmployeeJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        manageEmployeeJButton1 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(111, 158, 159));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        manageEmployeeJButton.setBackground(new java.awt.Color(255, 255, 255));
        manageEmployeeJButton.setText("Go to Class");
        manageEmployeeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageEmployeeJButtonActionPerformed(evt);
            }
        });
        add(manageEmployeeJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 480, 150, 60));

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Class", "Capacity", "Participants", "Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, 760, 350));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel2.setText("Coach xxx, welcome! ");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, -1, -1));

        manageEmployeeJButton1.setBackground(new java.awt.Color(255, 255, 255));
        manageEmployeeJButton1.setText("Reschedule Class");
        manageEmployeeJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageEmployeeJButton1ActionPerformed(evt);
            }
        });
        add(manageEmployeeJButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 80, 150, 40));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Create New Class");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, 150, 40));

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setText("refresh");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 80, -1, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void manageEmployeeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageEmployeeJButtonActionPerformed
        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select an line from table", "Warning", JOptionPane.WARNING_MESSAGE);

        }

        CoachClass coachclass = (CoachClass) workRequestJTable.getValueAt(selectedRow, 0);

        GotoClassJPanel gotoClassJPanel = new GotoClassJPanel(userProcessContainer, userAccount, labOrganization, business,coachclass);
        userProcessContainer.add("GotoClassJPanel", gotoClassJPanel);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_manageEmployeeJButtonActionPerformed

    private void manageEmployeeJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageEmployeeJButton1ActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select an line from table", "Warning", JOptionPane.WARNING_MESSAGE);

        }

        CoachClass coachclass = (CoachClass) workRequestJTable.getValueAt(selectedRow, 0);

        UpdateclassJPanel uJPanel = new UpdateclassJPanel(userProcessContainer, coachclass);
        userProcessContainer.add("updateclassJPanel", uJPanel);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_manageEmployeeJButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        CreateClassJPanel cJPanel = new CreateClassJPanel(userProcessContainer,userAccount, enterprise);
        userProcessContainer.add("CreateclassJPanel1", cJPanel);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton manageEmployeeJButton;
    private javax.swing.JButton manageEmployeeJButton1;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables

}
